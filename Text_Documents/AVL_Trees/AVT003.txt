              AVL TREES
                 By Asami Enomoto
                       CS 146
                           
                    AVL Tree is…
      • named after Adelson-Velskii and Landis
      • the ifrst dynamically balanced trees to be pr
        opose
      • Binary search tree with balance condition i
        n which the sub-trees of each node can diffe
        r by at most 1 in their height
                               
          Deifnition of a balanced tree
     • Ensure the depth = O(log N)
     • Take O(log N) time for searching, insertion, 
       and deletion
     • Every node must have left & right sub-trees 
       of the same height
                              
     An AVL tree has the following properties: 
     1. Sub-trees of each 
         node can differ by 
         at most 1 in their 
         height
     2. Every sub-trees is 
         an AVL tree
                                
                    AVL tree?
    YES                       NO
    Each left sub-tree has    Left sub-tree has height 3, 
    height 1 greater than     but right sub-tree has 
    each right sub-tree       height 1
                           
              Insertion and Deletions
      • It is performed as in binary search trees
      • If the balance is destroyed, rotation(s) is 
        performed to correct balance
      • For insertions, one rotation is suiffcient
      • For deletions, O(log n) rotations at most are 
        needed
                                
   Single Rotation
    left sub-tree is two levelmove ① up a level and
    deeper than the right sub-tree② down a level
                           
   Double Rotation
  Left sub-tree is two level Move ② up two levels and 
  deeper than the right sub- ③ down a level
                           
  tree
  Insertio
  n
                            Insert 6
                                       Imbalance at 8
                                       Perform rotation with 7
                                    
                           
  Deletion
                    Delete 4
                                Imbalance at 3
                                Perform rotation with 2
   Imbalance at 5
   Per form rotation with 8 
                           
                      Key Points
      • AVL tree remain balanced by applying 
        rotations, therefore it guarantees O(log N) 
        search time in a dynamic environment
      • Tree can be re-balanced in at most O(log N) 
        time
                               
